-- create database notarial_office1;
-- create table clients(
-- id_client int primary key auto_increment,
-- title varchar(30) not null,
-- activity_category varchar(30) not null,
-- address varchar(60) not null,
-- phone varchar(11) not null
-- );
-- create table services(
-- id_service int primary key auto_increment,
-- title varchar(70) not null,
-- description varchar(200) not null,
-- price int default(0) check(price >0)
-- );

-- create table Services_rendered(
-- id_transaction int not null,
-- id_service int not null,
-- amount int default(1) check(amount >= 1)
-- );
-- create table transactions(
-- id_transaction int primary key auto_increment,
-- id_client int not null,
-- transaction_date date default(current_date())
-- );

-- alter table transactions
-- add foreign key(id_client) references clients(id_client);
-- alter table Services_rendered
-- add foreign key(id_transaction) references transactions(id_transaction);
-- alter table Services_rendered
-- add foreign key(id_service) references services(id_service);



-- insert into services(title, description, price) values
-- ('Нотариальное заверение документов','Заверка подписи', 150),
-- ('Выдача свидетельства о праве собственности','Выдача свидетельства о праве собственности', 200),
-- ('Засвидетельствование перевода документов','Засвидетельствование перевода документов', 140),
-- ('Прием на хранение документов','Прием на хранение документов', 350),
-- ('Удостоверение договоров купли-продажи недвижимости','Удостоверение договоров купли-продажи недвижимости', 1500);
-- insert into transactions(id_client) values(1),(2),(3),(4);
-- insert into services_rendered(id_transaction,id_service, amount) values
-- (1,1,2),
-- (1,2,6),
-- (1,3,4),
-- (1,4,3),
-- (4,1,2),
-- (4,2,3),
-- (4,3,4),
-- (4,4,3),
-- (2,1,5),
-- (3,1,3);
-- insert into transactions(id_client) values(1),(2);
-- insert into services_rendered(id_transaction,id_service, amount) values
-- (5,5,1),
-- (6,2,6),
-- (6,3,4);
-- insert into services(title, description, price) values
-- ('Брачный договор','Брачный договор', 10000);
-- insert into transactions(id_client, transaction_date) values(1, 20210203);
-- insert into services_rendered(id_transaction,id_service, amount) values
-- (7,5,1),
-- (7,2,6),
-- (7,3,4);


-- select clients.title  from clients
-- union
-- select sum(services.price * services_rendered.amount) as summa_transaction from services_rendered,transactions,services
-- where services_rendered.id_transaction = transactions.id_transaction and  services_rendered.id_service = services.id_service
-- group by transactions.id_transaction;


-- исп between + having
-- select clients.title, sum(services.price * services_rendered.amount) as summa_transaction from services_rendered,transactions,services, clients
-- where services_rendered.id_transaction = transactions.id_transaction and  services_rendered.id_service = services.id_service and clients.id_client = transactions.id_client
-- group by transactions.id_transaction having (summa_transaction  between 2000 and 5000);


--
-- select clients.title, sum(services.price * services_rendered.amount) as summa_transaction from services_rendered,transactions,services, clients
-- where services_rendered.id_transaction = transactions.id_transaction and  services_rendered.id_service = services.id_service and clients.id_client = transactions.id_client
-- group by transactions.id_transaction
-- order by summa_transaction  desc limit 1;

-- select clients.title, sum(services.price * services_rendered.amount) as summa_transaction from services_rendered,transactions,services, clients
-- where services_rendered.id_transaction = transactions.id_transaction and  services_rendered.id_service = services.id_service and clients.id_client = transactions.id_client
-- group by transactions.id_transaction
-- order by summa_transaction limit 1;

-- Бред
-- select clients.title, avg(services.price * services_rendered.amount) as summa_transaction from services_rendered,transactions,services, clients
-- where services_rendered.id_transaction = transactions.id_transaction and  services_rendered.id_service = services.id_service and clients.id_client = transactions.id_client
-- group by transactions.id_transaction;
-- order by summa_transaction limit 1;

-- select clients.title, sum(services.price * services_rendered.amount) as summa_transaction, avg(services.price * services_rendered.amount) from services_rendered,transactions,services, clients
-- where services_rendered.id_transaction = transactions.id_transaction and  services_rendered.id_service = services.id_service and clients.id_client = transactions.id_client
-- group by transactions.id_transaction having (summa_transaction = max);

-- select avg(services.price) from services;

-- select * from transactions;


-- Поздапрос(какие услуги клиент не покупал)
select services.title from services, services_rendered, transactions,clients
where services_rendered.id_transaction = transactions.id_transaction and  services_rendered.id_service = services.id_service and clients.id_client = transactions.id_client
and services.title  not in (select services.title from services, services_rendered, transactions,clients
where services_rendered.id_transaction = transactions.id_transaction and  services_rendered.id_service = services.id_service
and clients.id_client = transactions.id_client and clients.title = 'Ситилинк' )
group by services_rendered.id_service;

-- select services.title from services, services_rendered, transactions,clients
-- where services_rendered.id_transaction = transactions.id_transaction and  services_rendered.id_service = services.id_service
-- and clients.id_client = transactions.id_client and clients.title = 'Ситилинк'

-- Вывести месяц когда клиенты больше всего совершает сделок


select clients.title, count(services_rendered.amount) amount_services, month(transactions.transaction_date) month_transaction from  services, services_rendered, clients, transactions
where services_rendered.id_transaction = transactions.id_transaction and  services_rendered.id_service = services.id_service and clients.id_client = transactions.id_client
group by clients.id_client,clients.title,  month_transaction order by amount_services ;
-- Топ 5 самых популярных месецев
-- select month(transactions.transaction_date) month_transaction, count(services_rendered.amount) amount_services from transactions, services, services_rendered, clients
-- where services_rendered.id_transaction = transactions.id_transaction and  services_rendered.id_service = services.id_service and clients.id_client = transactions.id_client
-- group by  month_transaction order by amount_services desc limit 5;
-- select * from  services_rendered;

-- select clients.title, count(transactions.id_transaction) amount_transactions, sum(services.price * services_rendered.amount) sum_all_transaction from transactions, clients,services_rendered, services
-- where clients.id_client = transactions.id_client and services_rendered.id_transaction = transactions.id_transaction and services.id_service = services_rendered.id_service
-- group by transactions.id_transaction;

-- select clients.title, count(transactions.id_client) amount_transactions, sum(services.price * services_rendered.amount) sum_all_transaction from transactions, clients,services_rendered, services
-- where clients.id_client = transactions.id_client and services_rendered.id_transaction = transactions.id_transaction and services.id_service = services_rendered.id_service
-- group by transactions.id_client;

select clients.title, count(transactions.id_client) amount_transactions, sum(services.price * services_rendered.amount) sum_all_transaction 
from transactions, clients,services_rendered, services
where clients.id_client = transactions.id_client and services_rendered.id_transaction = transactions.id_transaction and services.id_service = services_rendered.id_service
and (clients.title = 'Ситилинк' or clients.title = 'Эльдорадо')
group by transactions.id_client;





